# Recursively create a new directory and enter it
function mk() {
  mkdir -p "$@" && cd "$@"
}

# Open man page as PDF
function manpdf() {
 man -t "${1}" | open -f -a /Applications/Preview.app/
}
# Extra many types of compressed packages
# Credit: http://nparikh.org/notes/zshrc.txt
extract() {
  if [ -f "$1" ]; then
    case "$1" in
      *.tar.bz2)  tar -jxvf "$1"                        ;;
      *.tar.gz)   tar -zxvf "$1"                        ;;
      *.bz2)      bunzip2 "$1"                          ;;
      *.dmg)      hdiutil mount "$1"                    ;;
      *.gz)       gunzip "$1"                           ;;
      *.tar)      tar -xvf "$1"                         ;;
      *.tbz2)     tar -jxvf "$1"                        ;;
      *.tgz)      tar -zxvf "$1"                        ;;
      *.zip)      unzip "$1"                            ;;
      *.ZIP)      unzip "$1"                            ;;
      *.pax)      cat "$1" | pax -r                     ;;
      *.pax.Z)    uncompress "$1" --stdout | pax -r     ;;
      *.Z)        uncompress "$1"                       ;;
      *) echo "'$1' cannot be extracted/mounted via extract()" ;;
    esac
  else
     echo "'$1' is not a valid file to extract"
  fi
}

# From: https://gist.github.com/jpillora/260873a1238ee1a80d7b4420689a8716
#example usage
#s3get my-bucket/a/path/to/my/file > /tmp/file
function s3get {
	#helper functions
	function fail {	echo "$1" > /dev/stderr; exit 1; }
	#dependency check
	if ! hash openssl 2>/dev/null; then fail "openssl not installed"; fi
	if ! hash curl 2>/dev/null; then fail "curl not installed"; fi
	#params
	path="${1}"
	bucket=$(cut -d '/' -f 1 <<< "$path")
	key=$(cut -d '/' -f 2- <<< "$path")
	region="${2:-us-west-1}"
	#load creds
	access="$AWS_ACCESS_KEY"
	secret="$AWS_SECRET_KEY"
	#validate
	if [[ "$bucket" = "" ]]; then fail "missing bucket (arg 1)"; fi;
	if [[ "$key" = ""    ]]; then fail "missing key (arg 1)"; fi;
	if [[ "$region" = "" ]]; then fail "missing region (arg 2)"; fi;
	if [[ "$access" = "" ]]; then fail "missing AWS_ACCESS_KEY (env var)"; fi;
	if [[ "$secret" = "" ]]; then fail "missing AWS_SECRET_KEY (env var)"; fi;
	#compute signature
	contentType="text/html; charset=UTF-8" 
	date="`date -u +'%a, %d %b %Y %H:%M:%S GMT'`"
	resource="/${bucket}/${key}"
	string="GET\n\n${contentType}\n\nx-amz-date:${date}\n${resource}"
	signature=`echo -en $string | openssl sha1 -hmac "${secret}" -binary | base64` 
	
echo "https://s3-${region}.amazonaws.com${resource}"
#get!
	curl -H "x-amz-date: ${date}" \
		-H "Content-Type: ${contentType}" \
		-H "Authorization: AWS ${access}:${signature}" \
		"https://s3-${region}.amazonaws.com${resource}"
}

function latestFZBackup {
	KEY=$(aws s3 ls fz-backups --recursive | sort | grep funeralzone_gb | tail -n 1 | awk '{print $4}')

	#s3get "fz-backups/$KEY" "eu-west-1"
	#echo "aws s3 cp s3://fz-backups/$KEY $1"
	aws s3 cp s3://fz-backups/$KEY $1
}

